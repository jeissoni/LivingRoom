// <auto-generated />
using System;
using LivingRoom.Repositoy.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace LivingRoom.Repositoy.Migrations
{
    [DbContext(typeof(LivingRoomContext))]
    partial class LivingRoomContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("LivingRoom.Entities.POCOs.AttendeeLivingGroup", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("IdLivingGroup")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdLivingGroup");

                    b.ToTable("AttendeeLivingGroups");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.City", b =>
                {
                    b.Property<int>("IdCity")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdCity"));

                    b.Property<int>("CountryId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("IdCity");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CountryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.LeaderLivingGroup", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<int>("IdLivingGroup")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdLivingGroup");

                    b.ToTable("LeaderLivingGroups");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.LivingGroup", b =>
                {
                    b.Property<int>("IdLivingGroup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IdLivingGroup"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("CityIdCity")
                        .HasColumnType("integer");

                    b.Property<int>("Day")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxAge")
                        .HasColumnType("integer");

                    b.Property<int>("MinAge")
                        .HasColumnType("integer");

                    b.HasKey("IdLivingGroup");

                    b.HasIndex("CityIdCity");

                    b.ToTable("LivingGroups");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Attendee")
                        .HasColumnType("boolean");

                    b.Property<int>("CellPhoneNumber")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Gender")
                        .HasColumnType("text");

                    b.Property<int?>("IdUser")
                        .HasColumnType("integer");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<bool>("Leader")
                        .HasColumnType("boolean");

                    b.Property<string>("Occupation")
                        .HasColumnType("text");

                    b.Property<bool>("Support")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.UserAddress", b =>
                {
                    b.Property<int>("UserAddressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserAddressId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("Zipcode")
                        .HasColumnType("integer");

                    b.HasKey("UserAddressId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAddresses");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.AttendeeLivingGroup", b =>
                {
                    b.HasOne("LivingRoom.Entities.POCOs.User", "User")
                        .WithMany("AttendeeLivingGroups")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivingRoom.Entities.POCOs.LivingGroup", "LivingGroup")
                        .WithMany("AttendeeLivingGroups")
                        .HasForeignKey("IdLivingGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LivingGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.City", b =>
                {
                    b.HasOne("LivingRoom.Entities.POCOs.Country", "Country")
                        .WithMany("City")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.LeaderLivingGroup", b =>
                {
                    b.HasOne("LivingRoom.Entities.POCOs.User", "User")
                        .WithMany("LeaderLivingGroups")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LivingRoom.Entities.POCOs.LivingGroup", "LivingGroup")
                        .WithMany("LeaderLivingGroups")
                        .HasForeignKey("IdLivingGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LivingGroup");

                    b.Navigation("User");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.LivingGroup", b =>
                {
                    b.HasOne("LivingRoom.Entities.POCOs.City", "City")
                        .WithMany()
                        .HasForeignKey("CityIdCity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.UserAddress", b =>
                {
                    b.HasOne("LivingRoom.Entities.POCOs.User", "User")
                        .WithMany("Address")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.Country", b =>
                {
                    b.Navigation("City");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.LivingGroup", b =>
                {
                    b.Navigation("AttendeeLivingGroups");

                    b.Navigation("LeaderLivingGroups");
                });

            modelBuilder.Entity("LivingRoom.Entities.POCOs.User", b =>
                {
                    b.Navigation("Address");

                    b.Navigation("AttendeeLivingGroups");

                    b.Navigation("LeaderLivingGroups");
                });
#pragma warning restore 612, 618
        }
    }
}
